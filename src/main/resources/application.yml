spring:
  application:
    name: microservice-kafka.order-service
  datasource:
    url: jdbc:postgresql://localhost:5432/micro_kafka_order_db
    username: postgres
    password: root
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    bootstrap-server: localhost:9092
    properties:
      spring.json.trusted.packages: "*"

    consumer:
      group-id: order-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

app:
  topics:
    order-created: order-created-topic
    order-processed: order-processed-topic
    inventory-check: inventory-check-topic
    inventory-updated: inventory-updated-topic
  kafka:
    consumer-groups:
      order-created: order-created-group
      order-processed: order-processed-group
      inventory-check: inventory-check-group
      inventory-updated: inventory-update-group
      notification-order-created: notification-order-created-group
      notification-order-processed: notification-order-processed-group
      notification-inventory-check: notification-inventory-check-group